{"version":3,"sources":["directive.js"],"names":["module","directive","restrict","link","scope","element","attrs","getHeight","length","offsetHeight","setContainerHeight","newHeight","container","css","isElementActive","hasClass","transitionClass","viewWithTransition","addClass","parent","$watch","angular"],"mappings":"CAAA,SAAWA,GACP,YASAA,GAAOC,UAAU,qBAAsB,WACnC,OACIC,SAAU,IACVC,KAAM,SAAUC,EAAOC,EAASC,GAY5B,QAASC,KACL,MAAOF,GAAQG,OAAUH,EAAQ,GAAGI,cAAgB,EAAK,EAO7D,QAASC,GAAmBC,GACxBC,EAAUC,IAAI,aAAcF,EAAU,MAQ1C,QAASG,GAAgBT,GACrB,MAAOA,IAAWA,EAAQU,SAAS,mBAxBvC,GAAIC,GAAkBV,EAAMW,kBA2BxBD,IACAX,EAAQa,SAASF,EAGrB,IAAIJ,GAAYP,EAAQc,QACxBf,GAAMgB,OAAOb,EAAW,SAAUI,GAE1BG,EAAgBT,IAChBK,EAAmBC,UAQxCU,QAAQrB,OAAO,8BAA+B","file":"view-with-transition.min.js","sourcesContent":["(function (module) {\n    'use strict';\n\n    /**\n     * @ngdoc directive\n     * @name viewWithTransition\n     * @description\n     * Fix the height of the parent container of a view node when the view is been transitioned.\n     * @author dzegarra@gmail.com\n     */\n    module.directive('viewWithTransition', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attrs) {\n\n                /**\n                 * Name of the specific class which contain the transition properties.\n                 * @type {string}\n                 */\n                var transitionClass = attrs.viewWithTransition;\n\n                /**\n                 * Returns the height of the content inside the view container;\n                 * @returns {number}\n                 */\n                function getHeight() {\n                    return element.length ? (element[0].offsetHeight || 0) : 0;\n                }\n\n                /**\n                 * Set the min height of the container.\n                 * @param {number} newHeight\n                 */\n                function setContainerHeight(newHeight) {\n                    container.css('min-height', newHeight+'px');\n                }\n\n                /**\n                 * Check is the element passed is the current view active or becoming active.\n                 * @param {Element} element\n                 * @returns {Boolean}\n                 */\n                function isElementActive(element) {\n                    return element && element.hasClass('ng-enter-active');\n                }\n\n                if (transitionClass) {\n                    element.addClass(transitionClass);\n                }\n\n                var container = element.parent();\n                scope.$watch(getHeight, function (newHeight) {\n                    //Update parent height only if enter transition is running\n                    if (isElementActive(element)) {\n                        setContainerHeight(newHeight);\n                    }\n                });\n\n            }\n        };\n    });\n\n})(angular.module('dzegarra.utils.transitions', ['ngAnimate']));\n"]}